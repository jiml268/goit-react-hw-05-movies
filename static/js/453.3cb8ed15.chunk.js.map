{"version":3,"file":"static/js/453.3cb8ed15.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/HeadingPage/HeadingPage.module.css?857a","pages/HeadingPage/HeadingPage.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/API.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HeadingPage_title__ma9pD\"};","import s from './HeadingPage.module.css';\n\nfunction HeadingPage({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n\nexport default HeadingPage;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBox_searchForm__SdqTH\",\"searchInput\":\"SearchBox_searchInput__RgkWt\"};","import s from './SearchBox.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ onChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onChange(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm} >\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies ...\"\n          onChange={handleQuerySearch}\n           className={s.searchInput}\n        />\n        <button\n          type=\"submit\"\n          className={s.searchButton}\n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;","// extracted by mini-css-extract-plugin\nexport default {\"moviesPageList\":\"MoviesPage_moviesPageList__1E9vB\",\"moviesPageItem\":\"MoviesPage_moviesPageItem__yiIta\",\"moviesPageeImage\":\"MoviesPage_moviesPageeImage__4g0Lq\",\"moviesPageDetails\":\"MoviesPage_moviesPageDetails__l1gq1\"};","import SearchBox from \"../../components/SearchBox\"\nimport HeadingPage from 'pages/HeadingPage';\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"\nimport { getSearchMovies } from \"../../services/API\"\nimport { Link, useLocation} from \"react-router-dom\";\nimport s from './MoviesPage.module.css'\n\n\nconst MoviesPage = () => {\n    const [searchParams,setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n    const query = searchParams.get(\"query\")?? \"\";\n\n    useEffect(() => {\n        if (query) {\n        getSearchMovies(query).then(setMovies)};\n    }, [query, searchParams]);\n\n\n    const updateQueryString = (query) => {\n    const nextParams = query !== \"\" ? { query} : {};\n    setSearchParams(nextParams);\n  };\n    \n    return (\n        <>    \n        <HeadingPage text={'Movie Search'}></HeadingPage>\n                 <SearchBox value={query} onChange={updateQueryString} />    \n            <ul className = {s.moviesPageList}>\n                \n                {movies.map((movie) => (\n       <li className={s.moviesPageItem} key={movie.id}>\n                        <Link to={`/movies/${movie.id}`} state={{from: location.pathname+ location.search}}>\n                    <div>\n                    <img className={s.moviesPageeImage} src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n                    </div>\n                    <div className = {s.moviesPageDetails}>\n                        <h3> {movie.title}  </h3>\n                        <h4> Release Date: {movie.release_date}</h4>\n                        </div>\n                                       </Link>\n          </li>\n        ))}\n        </ul>\n    </>\n    );\n};\n\nexport default MoviesPage;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '284a0361af0f19810108b41baa563813';\n\nexport async function getTrendingMovies() {\n  const res = await fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n  const res_1 = await res.json();\n  return res_1.results;\n};\n\nexport async function getSearchMovies(searchQuery) {\n  const res = await fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n  const res_1 = await res.json();\n  return res_1.results;\n};\n\nexport async function getMovieDetails(movieId) {\n  const res = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return await res.json();\n};\n\nexport async function getMovieDetailsCast(movieId) {\n  const res = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n  const res_1 = await res.json();\n  return res_1.cast;\n};\n\nexport async function getMovieDetailsReviews(movieId) {\n  const res = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n  \n};\n\nexport async function getMovieGenres() {\n  const res = await fetch(`${BASE_URL}genre/movie/list?language=en&api_key=${API_KEY}`);\n  return await res.json();\n  \n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["text","className","s","onChange","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","location","useLocation","query","get","useEffect","getSearchMovies","then","HeadingPage","map","movie","to","id","state","from","pathname","search","src","poster_path","alt","title","release_date","BASE_URL","API_KEY","getTrendingMovies","fetch","res","json","res_1","results","getMovieDetails","movieId","getMovieDetailsCast","cast","getMovieDetailsReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}